buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl 플러그인 추가
}

group = 'capston'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'

	//web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//lombok
	compileOnly 'org.projectlombok:lombok'

	//mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	//lombok
	annotationProcessor 'org.projectlombok:lombok'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//jwt 인증 용도
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'


	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//swagger 용도
	implementation 'io.springfox:springfox-boot-starter:3.0.0'


	//email check
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}" // querydsl라이브러리 추가

	// coolsms
	implementation 'net.nurigo:sdk:4.2.7'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl" // querydsl에서 사용할 경로 선언

querydsl { // querydsl 설정 추가
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets { // 빌드시 사용할 sourceset 추가
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
